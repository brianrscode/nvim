return {
    "williamboman/mason.nvim",
    -- dependencies = {
    --     "williamboman/mason-lspconfig.nvim",
    --     "WhoIsSethDaniel/mason-tool-installer.nvim",
    -- },
    -- config = function()
    --     require("mason").setup({
    --         ui = {
    --             icons = {
    --                 package_installed = "‚úì",
    --                 package_pending = "üïê",
    --                 package_uninstalled = "‚ùå",
    --             },
    --         },
    --     })

    -- LSPs para instalar
    -- require("mason-lspconfig").setup({
    --     ensure_installed = {
    --         "pyright", -- LSP -> Autocompletado, detecci√≥n de errores y tipado (pylance)
    --         "debugpy", -- DAP (Debug Adapter Protocol) -> Debugging python
    --         "lua_ls", -- Para desarrollo en Lua/Nvim
    --         "ruff", -- Linter -> formateo de c√≥digo y detecci√≥n de errores de estilo
    --         "python-lsp-server",
    --         "ruff-lsp",
    --         -- "isort", -- Linter -> Ordenamiento de imports
    --         "django-template-lsp", -- LSP para plantillas Django | Autocompletado y detecci√≥n de errores
    --         "djlint", -- Linter -> Formateado para templates django
    --
    --         "stylua", -- Formateador de c√≥digo Lua
    --
    --         "emmet-ls", -- servidor de lenguaje para HTML y CSS
    --
    --         "markdown-toc", -- Genera tablas de contenidos (TOC)
    --         "markdownlint-cli2", -- Linter para Markdown para buenas pr√°cticas
    --         -- "marksman", -- LSP -> Autocompletado, formateo y navegaci√≥n pr√°cticas
    --
    --         "lua-language-server", -- LSP para Lua -> Autocompletado, linting y detecci√≥n de errores
    --
    --         -- "taplo", -- LSP para archivos TOML
    --
    --         -- "jinja-lsp",
    --         -- "htmx-lsp",
    --     },
    --     max_concurrent_installers = 10,
    -- })

    -- Herramientas externas (no LSP)
    -- require("mason-tool-installer").setup({
    --     ensure_installed = {
    --         "black", -- Formatter para Python
    --         "isort", -- Ordenador de imports
    --         "ruff", -- Linter r√°pido para Python
    --         "djlint", -- Formatter y linter para Django templates
    --         "stylua", -- Lua formatter
    --         "shfmt", -- Shell formatter
    --         "markdownlint", -- Linter Markdown
    --         "debugpy", -- Debugger para Python
    --     },
    --     auto_update = true,
    --     run_on_start = true,
    --
    -- })
    --

    -- mason.setup(options)
    -- vim.api.nvim_create_user_command("MasonInstallAll", function()
    --     vim.cmd("MasonInstall " .. table.concat(options.ensure_installed, " "))
    -- end, {})
    -- end,
}
